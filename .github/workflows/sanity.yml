name: CI Sanity

on:
  push:
  pull_request:

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f constraints.txt ]; then
            pip install --no-cache-dir -r requirements.txt -c constraints.txt
          else
            pip install --no-cache-dir -r requirements.txt
          fi

      - name: Verify ta import and RSI smoke test
        run: |
          python - << 'PY'
          import ta, pandas as pd
          s = pd.Series([1.0, 1.1, 1.2, 1.15, 1.18, 1.22, 1.25, 1.27, 1.29, 1.3])
          rsi = ta.momentum.rsi(s, window=3)
          print('ta version:', getattr(ta, '__version__', 'unknown'))
          print('RSI last value:', float(rsi.iloc[-1]))
          assert rsi.iloc[-1] == rsi.iloc[-1], 'RSI should be a number'
          PY

      - name: Launch API server
        run: |
          uvicorn src.app:app --host 127.0.0.1 --port 8000 &
          sleep 3

      - name: Health check /healthz
        run: |
          curl -sSf http://127.0.0.1:8000/healthz | tee /dev/stderr

      - name: Curl /flow/snapshot
        run: |
          curl -sSf "http://127.0.0.1:8000/flow/snapshot" | tee /dev/stderr

      - name: Curl /alpha/hunter (POST)
        run: |
          curl -sSf -X POST \
            -H "Content-Type: application/json" \
            -d '{"symbol":"EURUSD","timeframe":"1h"}' \
            http://127.0.0.1:8000/alpha/hunter | tee /dev/stderr

      - name: Curl /stock/scanner
        run: |
          curl -sSf "http://127.0.0.1:8000/stock/scanner?symbol=SPY&timeframe=1h" | tee /dev/stderr

      - name: Curl /correl/score
        run: |
          curl -sSf "http://127.0.0.1:8000/correl/score?symbol=EURUSD&timeframe=1h" | tee /dev/stderr

      - name: Curl /stocks/smartfinder
        run: |
          curl -sSf "http://127.0.0.1:8000/stocks/smartfinder?symbol=PLTR&timeframe=1h&price=18.5" | tee /dev/stderr

      - name: Curl /flow/anomaly
        run: |
          curl -sSf "http://127.0.0.1:8000/flow/anomaly?symbol=EURUSD&timeframe=1h" | tee /dev/stderr

      - name: Curl /orchestrator/last_decision
        run: |
          curl -sSf "http://127.0.0.1:8000/orchestrator/last_decision" | tee /dev/stderr

      - name: Curl /orchestrator/decision (POST) and /orchestrator/history
        run: |
          curl -sSf -X POST \
            -H "Content-Type: application/json" \
            -d '{"timestamp":"2024-01-01T00:00:00Z","symbol":"EURUSD","timeframe":"1h","direction":"BUY","conviction":0.4,"confidence":0.8,"expected_return":0.01,"risk":0.004,"rationale":"CI","agent_contributions":{"AlphaHunter":0.2}}' \
            http://127.0.0.1:8000/orchestrator/decision | tee /dev/stderr
          curl -sSf "http://127.0.0.1:8000/orchestrator/history?limit=1" | tee /dev/stderr

      - name: Install pytest
        run: |
          pip install pytest

      - name: Run pytest
        run: |
          pytest -q

      - name: Verify MT5 guard returns None
        env:
          ENABLE_MT5: "0"
        run: |
          python - << 'PY'
          from src.providers.mt5_client import try_import_mt5
          assert try_import_mt5() is None, 'MT5 should not be available in CI'
          print('MT5 guard OK')
          PY